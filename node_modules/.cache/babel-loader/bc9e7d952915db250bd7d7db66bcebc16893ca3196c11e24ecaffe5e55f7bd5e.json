{"ast":null,"code":"var _jsxFileName = \"/Users/B0300663/Documents/self react projects/paragraph/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './data';\n// function App() {\n//   const[count, setCount] = useState(0);\n//   const[text, setText]= useState([]);\n\n//   const handleSubmit = (e) =>{\n//     e.preventDefault();\n//     setText(data.slice(0, count));\n//   }\n//   return (\n//     <section className='section-center'>\n//       <h3>Tired of boring lorem ipsum?</h3>\n//       <form className='lorem-form' onSubmit={handleSubmit}>\n//         <label htmlFor='amount'>\n//           Paragraphs : \n//         </label>\n//         <input type=\"number\" name='amount' id='amount' value={count}\n//         onChange={(e)=>setCount(e.target.value)}></input>\n//         <button className='btn' type='submit'>Generate</button>\n//       </form>\n//       <article className='lorem-text'>\n//         {\n//           text.map((item, index)=>{\n//             return <p key={index}>{item}</p>\n//           })\n//         }\n//       </article>\n//     </section>\n//     )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(count);\n    // let amount = parseInt(count);\n    // if(count<=0){\n    //   amount = 1;\n    // }\n    // else if(count>8){\n    //   amount = 8;\n    // }\n\n    setText(data.slice(0, count));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"heading\",\n      children: \"Tired of boring Loren ipsum?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Paragraphs: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        id: \"amount\",\n        value: count,\n        onChange: e => setCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), text.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(App, \"uaqNQJro0SNi64HXpTFoq2QUakw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","count","setCount","text","setText","handleSubmit","e","preventDefault","console","log","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","id","value","onChange","target","map","item","index","_c","$RefreshReg$"],"sources":["/Users/B0300663/Documents/self react projects/paragraph/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport data from './data';\n// function App() {\n//   const[count, setCount] = useState(0);\n//   const[text, setText]= useState([]);\n  \n//   const handleSubmit = (e) =>{\n//     e.preventDefault();\n//     setText(data.slice(0, count));\n//   }\n//   return (\n//     <section className='section-center'>\n//       <h3>Tired of boring lorem ipsum?</h3>\n//       <form className='lorem-form' onSubmit={handleSubmit}>\n//         <label htmlFor='amount'>\n//           Paragraphs : \n//         </label>\n//         <input type=\"number\" name='amount' id='amount' value={count}\n//         onChange={(e)=>setCount(e.target.value)}></input>\n//         <button className='btn' type='submit'>Generate</button>\n//       </form>\n//       <article className='lorem-text'>\n//         {\n//           text.map((item, index)=>{\n//             return <p key={index}>{item}</p>\n//           })\n//         }\n//       </article>\n//     </section>\n//     )\n// }\n\nfunction App(){\n  const[count, setCount] = useState(0);\n  const[text, setText]= useState([]);\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    console.log(count);\n    // let amount = parseInt(count);\n    // if(count<=0){\n    //   amount = 1;\n    // }\n    // else if(count>8){\n    //   amount = 8;\n    // }\n\n    setText(data.slice(0,count));\n  }\n    \n  return(\n    <>\n        <h3 className='heading'>Tired of boring Loren ipsum?</h3>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor='amount'>Paragraphs: </label>\n          <input type='number' name='amount' id='amount' value={count} onChange={(e)=>setCount(e.target.value)}></input>\n          <button type='submit' >Generate</button>\n        </form>\n        {text.map((item,index)=>{\n          return <p key={index}>{item}</p>\n        })}\n    </>\n  )\n}\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAK,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAEX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMY,YAAY,GAAEC,CAAC,IAAG;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAG,OAAO,CAACV,IAAI,CAACgB,KAAK,CAAC,CAAC,EAACT,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAIgB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDpB,OAAA;MAAMqB,QAAQ,EAAEZ,YAAa;MAAAM,QAAA,gBAC3Bf,OAAA;QAAOsB,OAAO,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CpB,OAAA;QAAOuB,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,QAAQ;QAACC,KAAK,EAAErB,KAAM;QAACsB,QAAQ,EAAGjB,CAAC,IAAGJ,QAAQ,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9GpB,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAE;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACNb,IAAI,CAACsB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,KAAG;MACtB,oBAAO/B,OAAA;QAAAe,QAAA,EAAgBe;MAAI,GAAZC,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAClC,CAAC,CAAC;EAAA,eACJ,CAAC;AAEP;AAAChB,EAAA,CA9BQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}